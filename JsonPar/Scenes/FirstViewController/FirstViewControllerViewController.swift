//
//  FirstViewControllerViewController.swift
//  JsonPar
//
//  Created by Amruta on 20/06/19.
//  Copyright (c) 2019 Bhargavi. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FirstViewControllerDisplayLogic: class
{
  func displaySomething(viewModel: FirstViewController.Receiver.ViewModel)
    func displayTellSender(viewModel:FirstViewController.TellSender.ViewModel)
}

class FirstViewControllerViewController: UIViewController, FirstViewControllerDisplayLogic
{

  var interactor: FirstViewControllerBusinessLogic?
  var router: (NSObjectProtocol & FirstViewControllerRoutingLogic & FirstViewControllerDataPassing)?
    
  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = FirstViewControllerInteractor()
    let presenter = FirstViewControllerPresenter()
    let router = FirstViewControllerRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
  
  }
    override func viewWillAppear(_ animated: Bool)
    {
        super.viewWillAppear(animated)
         doSomething()
    }
 
  
  // @IBOutlet weak var receiverLbl: UILabel!
    
    @IBOutlet weak var receiverLbl: UILabel!
    @IBAction func receiverBtnAction(_ sender: Any) {
        tellSender()
        var work:FirstViewControllerWorker?
        work?.doSomeWork()
    }
    
    func tellSender()
    {
        var resp:ServerResponse?
       let title = resp?.title
        print(title as Any)
        let name=receiverLbl.text!
        let request = FirstViewController.TellSender.Request(title:name)
        interactor?.tellSender(request: request)
    }
    
    func doSomething()
    {
        let request = FirstViewController.Receiver.Request()
        interactor?.doSomething(request: request)
    }
    func displayTellSender(viewModel: FirstViewController.TellSender.ViewModel)
    {
        router?.routeToSender(segue: nil)
    }
    func displaySomething(viewModel: FirstViewController.Receiver.ViewModel)
    {
        receiverLbl.text = viewModel.title
    }
}
